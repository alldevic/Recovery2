name: Deploy to GitHub Releases

on:
  push:
    tags: '*.*.*'

jobs:
  build:
    runs-on: windows-latest
    env:
      Solution_Path: Recovery2.sln
      Solution_Name: Recovery2
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
      asset_name: ${{ env.Solution_Name }}_${{ steps.get_version.outputs.VERSION }}.0.zip
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore packages
        run: nuget restore $env:Solution_Path

      - name: Build with MSBuild
        run: msbuild  ${{ env.Solution_Path }} -p:Configuration=$env:Configuration -p:Version=${{ steps.get_version.outputs.VERSION }}.0
        env:
          Configuration: Release
      
      - name: Upload output file
        uses: actions/upload-artifact@v2.2.4
        with:
          name: build-zip
          path: ./${{ env.Solution_Name }}_${{ steps.get_version.outputs.VERSION }}.0.zip
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Conventional Changelog Action
        id: changelog
        uses: metcalfc/changelog-generator@v3.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Download a build zip
        id: download_zip
        uses: actions/download-artifact@v2.0.10
        with:
          name: build-zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ needs.build.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.download_zip.outputs.download-path }}/${{ needs.build.outputs.asset_name }}
          asset_name: ${{ needs.build.outputs.asset_name }}
          asset_content_type: application/zip
